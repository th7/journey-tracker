<h1>Upload new photo to Imgur</h1>

<div>DROP!<button onclick="document.querySelector('input').click()">Or click</button></div>
<input style="visibility: collapse; width: 0px;" type="file" multiple onchange="uploadImage(this.files)">


<script>

    /* Drag'n drop stuff */
    window.ondragover = function(e) {e.preventDefault()}
    window.ondrop = function(e) {e.preventDefault(); uploadImage(e.dataTransfer.files); }
    self.uploadImage = function(files) {

    	for (var i=0; i<files.length; i++){

    		console.log(i);
				/* Is the file an image? */
        if (!files[i] || !files[i].type.match(/image.*/)) return;

        // /* It is! */
        // document.body.className = "uploading";

        /* Lets build a FormData object*/
        var fd = new FormData(); // I wrote about it: https://hacks.mozilla.org/2011/01/how-to-develop-a-html5-image-uploader/
        fd.append("image", files[i]); // Append the files[i]
        var xhr = new XMLHttpRequest(); // Create the XHR (Cross-Domain XHR FTW!!!) Thank you sooooo much imgur.com
        xhr.open("POST", "https://api.imgur.com/3/image.json"); // Boooom!
        xhr.onload = function () {
            var response = JSON.parse(xhr.responseText).data.link;
            $("#results").append("<p>"+response+"</p>");
            
            // ATTENTION!!!!!!!
            // looks like this is running into itself. Wait for the response before calling the next file in the queue

        }
        // Ok, I don't handle the errors. An exercice for the reader.
        xhr.setRequestHeader('Authorization', 'Client-ID 410a62cc1627046');

        /* And now, we send the formdata */
        xhr.send(fd);
      };

    };


</script>


<div id="results"><p>Here's the results:</p></div>




